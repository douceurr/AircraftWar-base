@startuml
'https://plantuml.com/class-diagram


abstract class AbstractProp{
    + AbstractProp(int locationX, int locationY, int speedX, int speedY)
    + forward():void
}

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + AbstractProp createProp()
    - Random(): int
    + forward():void
    + shoot():List<BaseBullet>
}

class BloodFactory{
    + createPropKind()：AbstractProp
}

class BombFactory{
    + createPropKind()：AbstractProp
}

class BulletFactory{
    + createPropKind()：AbstractProp
}

class BloodProp{
    + BloodProp(int locationX, int locationY, int speedX, int speedY)

}

class BombProp{
    + BombProp(int locationX, int locationY, int speedX, int speedY)
}

class BulletProp{
    + BulletProp(int locationX, int locationY, int speedX, int speedY)
}

interface PropFactory{
    + AbstractProp createPropKind()
}

PropFactory <|.. BloodFactory
PropFactory <|.. BombFactory
PropFactory <|.. BulletFactory

AbstractProp <|-- BloodProp
AbstractProp <|-- BombProp
AbstractProp <|-- BulletProp

BloodProp <.. BloodFactory
BombProp <.. BombFactory
BulletProp <.. BulletFactory

PropFactory <- EliteEnemy
AbstractProp <- EliteEnemy

@enduml